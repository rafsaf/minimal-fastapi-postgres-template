[tool.poetry]
authors = ["admin <admin@example.com>"]
description = "FastAPI project generated using minimal-fastapi-postgres-template."
name = "app"
version = "0.1.0-alpha"

[tool.poetry.dependencies]
python = "^3.12"

alembic = "^1.13.3"
asyncpg = "^0.30.0"
bcrypt = "^4.2.0"
fastapi = "^0.115.2"
pydantic = { extras = ["dotenv", "email"], version = "^2.9.2" }
pydantic-settings = "^2.6.0"
pyjwt = "^2.9.0"
python-multipart = "^0.0.12"
sqlalchemy = "^2.0.36"

[tool.poetry.group.dev.dependencies]
coverage = "^7.6.4"
freezegun = "^1.5.1"
gevent = "^24.10.3"
httpx = "^0.27.2"
mypy = "^1.12.1"
pre-commit = "^4.0.1"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
ruff = "^0.7.0"
types-passlib = "^1.7.7.20240819"
uvicorn = { extras = ["standard"], version = "^0.32.0" }

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.pytest.ini_options]
addopts = "-vv -n auto --cov --cov-report xml --cov-report term-missing --cov-fail-under=100"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
testpaths = ["app/tests"]

[tool.coverage.run]
concurrency = ["gevent"]
omit = ["app/tests/*"]
source = ["app"]

[tool.mypy]
python_version = "3.12"
strict = true

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
# pycodestyle, pyflakes, isort, pylint, pyupgrade
ignore = ["E501"]
select = ["E", "F", "I", "PL", "UP", "W"]
